# this is an example docker-compose.yml file to run the graphql-engine-plus image
services:
  postgres:
    image: postgres:13.4-alpine
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: example_graphql_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGUSER: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "--quiet"]
      interval: 5s
      timeout: 3s
    ports:
      - "5432:5432"
  redis:  # port 6379, 8001 -> Redis Insight UI
    image: redis/redis-stack:latest
    volumes:
      - redis-data:/data
    environment:
      REDIS_ARGS: "--requirepass redispwd --user redisuser on >redispwd ~* allcommands --user default off nopass nocommands"
    ports:
      - "6379:6379"
      - "18001:8001"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -u redis://redisuser:redispwd@127.0.0.1:6379 ping | grep PONG"]
      interval: 5s
      timeout: 3s
  jaeger:  # this include OTEL collector
    image: jaegertracing/all-in-one
    ports:
      - "16686:16686"  # expose Jaeger UI to display traces
    environment:
      - LOG_LEVEL=debug
    command: --memory.max-traces=1000
  dynamodb-local:
   command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ."
   image: "amazon/dynamodb-local:latest"
   ports:
     - "18000:8000"
   working_dir: /home/dynamodblocal
   volumes:
      - dynamodb-data:/home/dynamodblocal
  graphql-engine:
    image: graphql-engine-plus:latest
    # To allow to scale up to 3 instances
    # Change ports to "8000-8002:8000"
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./src/scripting:/graphql-engine/scripting
      - ./example/graphql-engine/scripts:/graphql-engine/scripts
    env_file:
      - ./.env
volumes:
  db_data:
    driver: local
  redis-data:
    driver: local
  dynamodb-data:
    driver: local